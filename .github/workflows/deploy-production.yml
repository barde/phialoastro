# Production Deployment Workflow
# 
# This workflow calls the reusable deployment workflow for production.
# It deploys to the live phialo.de domain and requires manual approval
# or can be triggered from tagged releases.

name: 🌟 Deploy to Production

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      confirm-production:
        description: 'Type "production" to confirm deployment to phialo.de'
        required: true
        type: string
      tag:
        description: 'Git tag or commit SHA to deploy'
        required: false
        type: string
        default: ''

permissions:
  contents: read
  deployments: write
  statuses: write

jobs:
  validate:
    name: Validate Production Deployment
    runs-on: ubuntu-latest
    outputs:
      proceed: ${{ steps.check.outputs.proceed }}
    steps:
      - name: Validate manual trigger
        id: check
        if: github.event_name == 'workflow_dispatch'
        run: |
          if [[ "${{ inputs.confirm-production }}" != "production" ]]; then
            echo "❌ Production deployment cancelled - confirmation text did not match"
            echo "proceed=false" >> $GITHUB_OUTPUT
            exit 1
          fi
          echo "✅ Production deployment confirmed"
          echo "proceed=true" >> $GITHUB_OUTPUT
          
      - name: Auto-approve for releases
        if: github.event_name == 'release'
        run: |
          echo "✅ Production deployment triggered by release"
          echo "proceed=true" >> $GITHUB_OUTPUT

  deploy-production:
    name: Deploy to Production
    needs: validate
    if: needs.validate.outputs.proceed == 'true' || github.event_name == 'release'
    uses: ./.github/workflows/deploy-reusable.yml
    with:
      environment: production
      worker-name: phialo-design
      deployment-url: https://phialo.de
      analytics-enabled: true
      cache-version: v1-prod
      enable-performance-comment: false
      enable-concurrency: false  # Never cancel production deployments
    secrets: inherit
    
  notify-success:
    name: Notify Deployment Success
    needs: deploy-production
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Create deployment record
        uses: actions/github-script@v7
        with:
          github-token: ${{ github.token }}
          script: |
            const deployment = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
              environment: 'production',
              description: 'Production deployment to phialo.de',
              production_environment: true,
              auto_merge: false,
              required_contexts: []
            });
            
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: deployment.data.id,
              state: 'success',
              target_url: 'https://phialo.de',
              description: 'Deployment successful',
              environment: 'production',
              environment_url: 'https://phialo.de'
            });