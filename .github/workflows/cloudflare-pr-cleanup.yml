name: Cloudflare PR Preview Cleanup

on:
  pull_request:
    types: [closed]

jobs:
  cleanup-preview:
    runs-on: ubuntu-latest
    name: Clean up PR Preview Worker
    # Only run if the PR has the 'preview-deployed' label
    if: contains(github.event.pull_request.labels.*.name, 'preview-deployed')
    permissions:
      contents: read
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Delete PR preview worker if it exists
        id: delete_worker
        if: github.actor != 'dependabot[bot]'
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          WORKER_NAME: phialo-pr-${{ github.event.pull_request.number }}
        working-directory: ./workers
        run: |
          # Install wrangler
          npm install wrangler@4.27.0
          
          # First, try to list the worker to check if it exists
          echo "Checking if worker '$WORKER_NAME' exists..."
          
          # Use the API to check if the worker exists
          RESPONSE=$(curl -s -X GET "https://api.cloudflare.com/client/v4/accounts/$CLOUDFLARE_ACCOUNT_ID/workers/scripts/$WORKER_NAME" \
               -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN" \
               -H "Content-Type: application/json")
          
          # Check if the worker exists (API returns success for existing workers)
          if echo "$RESPONSE" | grep -q '"success":true'; then
            echo "Worker '$WORKER_NAME' found. Deleting..."
            npx wrangler delete --name "$WORKER_NAME" --force
            echo "Worker deleted successfully."
            echo "deleted=true" >> $GITHUB_OUTPUT
          else
            echo "Worker '$WORKER_NAME' not found. It may have been deleted already or never created."
            echo "deleted=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Comment on PR about cleanup
        # Only comment if a worker was actually deleted
        if: steps.delete_worker.outputs.deleted == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr_number = context.issue.number;
            const identifier = '<!-- cloudflare-preview-cleanup -->';
            const body = identifier + '\n' +
              '## ðŸ§¹ Preview Deployment Cleaned Up\n\n' +
              'The Cloudflare preview deployment for this PR has been removed.\n';
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr_number,
              body: body
            });
      
      - name: Remove 'preview-deployed' label
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            try {
              await github.rest.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                name: 'preview-deployed'
              });
              console.log("Successfully removed 'preview-deployed' label");
            } catch (error) {
              if (error.status === 404) {
                console.log("Label 'preview-deployed' not found, which is unexpected but safe to ignore.");
              } else {
                // Re-throw other errors to make them visible
                throw error;
              }
            }