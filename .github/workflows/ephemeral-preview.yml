name: Ephemeral Preview Deployment

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'workers/**'
      - 'phialo-design/**'
      - '.github/workflows/ephemeral-preview.yml'

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          npm ci --prefix phialo-design
          npm ci --prefix workers
      
      - name: Build Astro site
        env:
          ENVIRONMENT: preview
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          cd phialo-design
          npm run build
      
      - name: Deploy to ephemeral environment
        id: deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          cd workers
          # Create unique worker name
          WORKER_NAME="phialo-pr-${{ github.event.pull_request.number }}"
          
          # Deploy with dynamic worker name
          npx wrangler deploy \
            --name "$WORKER_NAME" \
            --compatibility-date "2024-01-01" \
            --no-bundle \
            --var ENVIRONMENT:preview \
            --var PR_NUMBER:${{ github.event.pull_request.number }}
          
          # Get the actual deployed URL from wrangler output
          # The URL will be in format: https://phialo-pr-123.meise.workers.dev
          PREVIEW_URL=$(npx wrangler deployments list --name "$WORKER_NAME" --json | jq -r '.[0].url // empty')
          
          # Fallback if the above doesn't work
          if [ -z "$PREVIEW_URL" ]; then
            # Get account subdomain from Cloudflare API
            SUBDOMAIN=$(curl -s -X GET "https://api.cloudflare.com/client/v4/accounts/$CLOUDFLARE_ACCOUNT_ID" \
              -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN" \
              -H "Content-Type: application/json" | jq -r '.result.name' | tr ' ' '-' | tr '[:upper:]' '[:lower:]')
            PREVIEW_URL="https://${WORKER_NAME}.${SUBDOMAIN}.workers.dev"
          fi
          
          echo "preview_url=$PREVIEW_URL" >> $GITHUB_OUTPUT
      
      - name: Comment PR with preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const preview_url = '${{ steps.deploy.outputs.preview_url }}';
            const pr_number = context.issue.number;
            
            // Find and update existing comment or create new one
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr_number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('Preview Deployment')
            );
            
            const body = `## ðŸš€ Preview Deployment
            
            Your preview is ready at: ${preview_url}
            
            **Environment Details:**
            - Worker: \`phialo-pr-${pr_number}\`
            - Branch: \`${context.payload.pull_request.head.ref}\`
            - Commit: \`${context.sha.substring(0, 7)}\`
            
            This preview will be automatically deleted when the PR is closed or merged.`;
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr_number,
                body
              });
            }