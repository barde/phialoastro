name: Deploy Worker Preview

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'workers/**'
      - 'phialo-design/**'
      - '.github/workflows/worker-preview.yml'

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: |
            phialo-design/package-lock.json
            workers/package-lock.json

      - name: Install dependencies (main project)
        working-directory: phialo-design
        run: npm ci

      - name: Build Astro site
        working-directory: phialo-design
        run: npm run build

      - name: Install dependencies (workers)
        working-directory: workers
        run: npm ci

      - name: Deploy Worker Preview
        id: deploy
        working-directory: workers
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          PREVIEW_NAME="phialo-design-preview-pr-${PR_NUMBER}"
          
          # Deploy with preview environment
          npx wrangler deploy --env preview --name "${PREVIEW_NAME}" --var BRANCH_NAME="pr-${PR_NUMBER}"
          
          # Get the preview URL
          PREVIEW_URL="https://${PREVIEW_NAME}.workers.dev"
          echo "preview_url=${PREVIEW_URL}" >> $GITHUB_OUTPUT

      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const preview_url = '${{ steps.deploy.outputs.preview_url }}';
            const pr_number = context.issue.number;
            
            // Find existing comment
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr_number,
            });
            
            const botComment = comments.data.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('ðŸš€ Cloudflare Worker Preview Deployed')
            );
            
            const body = `ðŸš€ **Cloudflare Worker Preview Deployed**
            
Preview URL: ${preview_url}
Branch: \`pr-${pr_number}\`
            
---
*This preview will be automatically updated on each commit.*`;
            
            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr_number,
                body: body
              });
            }