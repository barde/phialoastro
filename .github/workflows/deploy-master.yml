name: Deploy Master to Cloudflare

on:
  push:
    branches:
      - master
    paths:
      - 'phialo-design/**'
      - 'workers/**'
      - '.github/workflows/deploy-master.yml'

permissions:
  contents: read
  deployments: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy Master to Cloudflare Workers
    environment:
      name: master
      url: https://phialo-master.meise.workers.dev
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          lfs: true
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      
      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      
      - name: Install dependencies
        working-directory: ./phialo-design
        run: pnpm install --frozen-lockfile
      
      - name: Build Astro site
        working-directory: ./phialo-design
        env:
          PUBLIC_TURNSTILE_SITE_KEY: ${{ secrets.PUBLIC_TURNSTILE_SITE_KEY }}
        run: pnpm run build
        
      - name: Create temporary wrangler config
        working-directory: ./workers
        run: |
          cat > wrangler-master.toml << EOF
          name = "phialo-master"
          main = "src/index.ts"
          compatibility_date = "2024-09-25"
          compatibility_flags = ["nodejs_compat"]
          workers_dev = true
          
          [assets]
          directory = "../phialo-design/dist"
          binding = "ASSETS"
          
          [vars]
          ENVIRONMENT = "master"
          EOF
      
      - name: Install Wrangler
        working-directory: ./workers
        run: npm install wrangler@4.22.0
      
      - name: Deploy to Cloudflare Workers
        id: deploy
        working-directory: ./workers
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          # Deploy the worker
          npx wrangler deploy --config wrangler-master.toml
          
          # Set secrets for the deployed worker
          echo "${{ secrets.RESEND_API_KEY }}" | npx wrangler secret put RESEND_API_KEY --name phialo-master
          echo "${{ secrets.FROM_EMAIL }}" | npx wrangler secret put FROM_EMAIL --name phialo-master
          echo "${{ secrets.TO_EMAIL }}" | npx wrangler secret put TO_EMAIL --name phialo-master
          echo "${{ secrets.TURNSTILE_SECRET_KEY }}" | npx wrangler secret put TURNSTILE_SECRET_KEY --name phialo-master
      
      - name: Clean up temporary config
        if: always()
        working-directory: ./workers
        run: |
          rm -f wrangler-master.toml
      
      - name: Create deployment
        uses: actions/github-script@v7
        with:
          script: |
            const deployment = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
              environment: 'master',
              description: 'Cloudflare Workers Master Deployment',
              production_environment: false,
              auto_merge: false,
              required_contexts: []
            });
            
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: deployment.data.id,
              state: 'success',
              environment_url: 'https://phialo-master.meise.workers.dev',
              description: 'Deployment successful'
            });