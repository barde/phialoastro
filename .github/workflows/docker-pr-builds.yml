name: PR Docker Builds

on:
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ github.repository_owner }}/phialo

jobs:
  # Build base image first
  build-base-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      pull-requests: write
    outputs:
      image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-ci-base:pr-${{ github.event.pull_request.number }}-ci-base
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-ci-base
          tags: |
            type=ref,event=pr,prefix=pr-,suffix=-ci-base

      - name: Build and push base image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ./ci/base
          file: ./ci/base/Dockerfile.base
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILD_DATE=${{ github.event.repository.updated_at }}
            VCS_REF=${{ github.event.pull_request.head.sha }}
            PR_NUMBER=${{ github.event.pull_request.number }}

  # Build other images that depend on base
  build-pr-images:
    needs: build-base-image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      pull-requests: write
    strategy:
      matrix:
        image:
          - name: test
            context: ./ci/test
            dockerfile: ./ci/test/Dockerfile.ci
          - name: build-deploy
            context: .
            dockerfile: ./ci/build/Dockerfile
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-${{ matrix.image.name }}
          tags: |
            type=ref,event=pr,prefix=pr-,suffix=-${{ matrix.image.name }}

      - name: Build and push PR image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.image.context }}
          file: ${{ matrix.image.dockerfile }}
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BASE_IMAGE=${{ needs.build-base-image.outputs.image-ref }}
            BUILD_DATE=${{ github.event.repository.updated_at }}
            VCS_REF=${{ github.event.pull_request.head.sha }}
            PR_NUMBER=${{ github.event.pull_request.number }}

      - name: Comment PR with image details
        uses: actions/github-script@v7
        if: success()
        with:
          script: |
            const image = '${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-${{ matrix.image.name }}:pr-${{ github.event.pull_request.number }}-${{ matrix.image.name }}';
            const body = `### üê≥ Docker Image Built: \`${{ matrix.image.name }}\`
            
            Pull this image locally:
            \`\`\`bash
            docker pull ${image}
            \`\`\`
            
            Run tests with this image:
            \`\`\`bash
            docker run --rm -v \$(pwd):/workspace ${image} npm test
            \`\`\`
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

  # Run basic smoke tests on PR images
  test-pr-images:
    needs: [build-base-image, build-pr-images]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    strategy:
      matrix:
        test:
          - name: base
            image: ci-base
            command: "node --version && npm --version && pnpm --version"
          - name: test
            image: test
            command: "playwright --version"
          - name: build-deploy
            image: build-deploy
            command: "wrangler --version"
    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Test ${{ matrix.test.name }} image
        run: |
          IMAGE="${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-${{ matrix.test.image }}:pr-${{ github.event.pull_request.number }}-${{ matrix.test.image }}"
          docker pull $IMAGE
          docker run --rm $IMAGE sh -c "${{ matrix.test.command }}"

  # Clean up PR images when PR is closed
  cleanup-pr-images:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        image: [ci-base, test, build-deploy]
    steps:
      - name: Delete PR image
        uses: actions/delete-package-versions@v5
        with:
          package-name: 'phialo-${{ matrix.image }}'
          package-type: 'container'
          delete-only-pre-release-versions: 'true'
          version-pattern: 'pr-${{ github.event.pull_request.number }}-${{ matrix.image }}'