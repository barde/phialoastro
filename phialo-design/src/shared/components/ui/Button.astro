---
export interface Props {
  href?: string;
  variant?: 'primary' | 'secondary' | 'ghost' | 'outline';
  size?: 'sm' | 'md' | 'lg';
  class?: string;
  target?: string;
  rel?: string;
  disabled?: boolean;
  type?: 'button' | 'submit' | 'reset';
}

const {
  href,
  variant = 'primary',
  size = 'md',
  class: className = '',
  target,
  rel,
  disabled = false,
  type = 'button',
  ...rest
} = Astro.props;

const baseClasses = 'inline-flex items-center justify-center font-medium transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gold/50 disabled:opacity-50 disabled:cursor-not-allowed';

const variants = {
  primary: 'bg-gold text-white hover:bg-gold/90 shadow-sm hover:shadow-md',
  secondary: 'bg-midnight text-white hover:bg-midnight/90 shadow-sm hover:shadow-md',
  ghost: 'text-gold border border-gold hover:bg-gold hover:text-white',
  outline: 'text-midnight border border-gray-300 hover:border-midnight hover:text-midnight'
};

const sizes = {
  sm: 'px-4 py-2 text-sm rounded',
  md: 'px-6 py-3 text-sm rounded-lg',
  lg: 'px-8 py-4 text-lg rounded-xl'
};

const classes = `${baseClasses} ${variants[variant]} ${sizes[size]} ${className}`;

const commonProps = {
  class: classes,
  disabled: disabled || undefined,
  ...rest
};
---

{href ? (
  <a 
    href={href}
    target={target}
    rel={rel}
    {...commonProps}
  >
    <slot />
  </a>
) : (
  <button 
    type={type}
    {...commonProps}
  >
    <slot />
  </button>
)}

<style>
  /* Enhance button interactions */
  a, button {
    transform-origin: center;
    will-change: transform;
  }
  
  a:hover, button:hover {
    transform: translateY(-1px);
  }
  
  a:active, button:active {
    transform: translateY(0);
  }
  
  /* Ghost variant special effects */
  .ghost-variant {
    position: relative;
    overflow: hidden;
  }
  
  .ghost-variant::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(212, 175, 55, 0.1), transparent);
    transition: left 0.5s ease;
  }
  
  .ghost-variant:hover::before {
    left: 100%;
  }
</style>
