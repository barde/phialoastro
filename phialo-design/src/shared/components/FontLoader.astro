---
// Font Loader Component - Progressive font loading with Font Loading API
---

<script>
  // Font Loading API for progressive enhancement
  if ('fonts' in document) {
    // Load critical fonts first
    const criticalFonts = [
      document.fonts.load('400 1em Inter'),
      document.fonts.load('700 1em "Playfair Display"')
    ];
    
    Promise.all(criticalFonts).then(() => {
      // Mark critical fonts as loaded
      document.documentElement.classList.add('fonts-loaded');
      
      // Then load additional font weights asynchronously
      const additionalFonts = [
        document.fonts.load('500 1em Inter'),
        document.fonts.load('600 1em Inter'),
        document.fonts.load('700 1em Inter'),
        document.fonts.load('400 1em "Playfair Display"'),
        document.fonts.load('500 1em "Playfair Display"'),
        document.fonts.load('600 1em "Playfair Display"')
      ];
      
      // Load additional fonts without blocking
      Promise.all(additionalFonts).catch(err => {
        console.warn('Some font weights failed to load:', err);
      });
    }).catch(err => {
      console.error('Critical fonts failed to load:', err);
      // Fallback to system fonts if loading fails
      document.documentElement.classList.add('fonts-fallback');
    });
  } else {
    // For browsers without Font Loading API, add class after timeout
    setTimeout(() => {
      document.documentElement.classList.add('fonts-loaded');
    }, 1000);
  }
  
  // Optimize font rendering performance
  if (CSS && CSS.supports && CSS.supports('font-synthesis', 'none')) {
    document.documentElement.style.fontSynthesis = 'none';
  }
</script>