name: E2E Tests with Playwright

on:
  pull_request:
    branches: [ main, master ]
  push:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      test_tag:
        description: 'Test tag to filter (e.g., @critical, @smoke)'
        required: false
        default: ''

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-test

jobs:
  # Build test image if needed
  build-image:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.image.outputs.image }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push test image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./ci/test/Dockerfile.ci
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - id: image
        run: echo "image=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_OUTPUT

  # Run E2E tests
  e2e-tests:
    needs: build-image
    runs-on: ubuntu-latest
    container:
      image: ${{ needs.build-image.outputs.image }}
      options: --user root
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
        shard: [1, 2, 3, 4]
    steps:
      - uses: actions/checkout@v4
      
      - name: Install dependencies
        run: |
          cd phialo-design
          pnpm install --frozen-lockfile
      
      - name: Run E2E tests
        run: |
          cd phialo-design
          pnpm test:e2e:ci \
            --project=${{ matrix.browser }} \
            --shard=${{ matrix.shard }}/4 \
            ${TEST_TAG:+--grep "$TEST_TAG"}
        env:
          TEST_TAG: ${{ github.event.inputs.test_tag }}
          CI: true
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.browser }}-${{ matrix.shard }}
          path: |
            phialo-design/test-results/
            phialo-design/playwright-report/
          retention-days: 7

  # Merge test reports
  report:
    needs: e2e-tests
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Download all test results
        uses: actions/download-artifact@v4
        with:
          pattern: test-results-*
          path: all-results/
      
      - name: Merge test reports
        run: |
          npx playwright merge-reports --reporter=html ./all-results/**/*.zip
      
      - name: Upload merged report
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
      
      - name: Comment PR with results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const resultsPath = './all-results';
            
            // Parse test results
            let passed = 0, failed = 0, skipped = 0;
            // ... parsing logic ...
            
            const comment = `## üé≠ Playwright Test Results
            
            - ‚úÖ Passed: ${passed}
            - ‚ùå Failed: ${failed}
            - ‚è≠Ô∏è Skipped: ${skipped}
            
            [View full report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  # Quick smoke tests for PRs
  smoke-tests:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    container:
      image: ${{ needs.build-image.outputs.image }}
    needs: build-image
    steps:
      - uses: actions/checkout@v4
      
      - name: Install dependencies
        run: |
          cd phialo-design
          pnpm install --frozen-lockfile
      
      - name: Run smoke tests
        run: |
          cd phialo-design
          pnpm test:e2e:smoke
        env:
          CI: true
      
      - name: Upload smoke test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: smoke-test-results
          path: |
            phialo-design/test-results/
            phialo-design/playwright-report/