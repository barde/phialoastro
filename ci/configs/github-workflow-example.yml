# Example GitHub Actions workflow using the Phialo CI base image
# This can be used as a template for CI workflows

name: CI with Base Image

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Build and cache the base image
  build-base-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build base image
        uses: docker/build-push-action@v5
        with:
          context: ./ci/base
          file: ./ci/base/Dockerfile.base
          tags: phialo-ci-base:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=docker,dest=/tmp/base-image.tar
      
      - name: Upload base image
        uses: actions/upload-artifact@v4
        with:
          name: base-image
          path: /tmp/base-image.tar
          retention-days: 1

  # Run tests using the base image
  test:
    needs: build-base-image
    runs-on: ubuntu-latest
    container:
      image: phialo-ci-base:latest
      options: --user root
    steps:
      - uses: actions/checkout@v4
      
      - name: Download base image
        uses: actions/download-artifact@v4
        with:
          name: base-image
          path: /tmp
      
      - name: Load base image
        run: docker load -i /tmp/base-image.tar
      
      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Run type checking
        run: pnpm run typecheck
      
      - name: Run linting
        run: pnpm run lint
      
      - name: Run tests
        run: pnpm test:run

  # Alternative: Using Docker Compose
  test-with-compose:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Run tests via Docker Compose
        run: |
          cd ci
          docker-compose run --rm test-base